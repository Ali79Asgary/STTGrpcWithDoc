// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: deepmine/speech/v1/speech.proto

package ir.deepmine.speech.v1;

public interface StreamingRecognizeResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:deepmine.speech.v1.StreamingRecognizeResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Output only. If set, returns a message that specifies the error for the operation.
   * </pre>
   *
   * <code>string error_message = 1;</code>
   */
  java.lang.String getErrorMessage();
  /**
   * <pre>
   * Output only. If set, returns a message that specifies the error for the operation.
   * </pre>
   *
   * <code>string error_message = 1;</code>
   */
  com.google.protobuf.ByteString
      getErrorMessageBytes();

  /**
   * <pre>
   * Output only. This repeated list contains zero or more results that
   * correspond to consecutive portions of the audio currently being processed.
   * It contains zero or one `is_final=true` result (the newly settled portion),
   * followed by zero or more `is_final=false` results (the interim results).
   * </pre>
   *
   * <code>repeated .deepmine.speech.v1.StreamingRecognitionResult results = 2;</code>
   */
  java.util.List<ir.deepmine.speech.v1.StreamingRecognitionResult> 
      getResultsList();
  /**
   * <pre>
   * Output only. This repeated list contains zero or more results that
   * correspond to consecutive portions of the audio currently being processed.
   * It contains zero or one `is_final=true` result (the newly settled portion),
   * followed by zero or more `is_final=false` results (the interim results).
   * </pre>
   *
   * <code>repeated .deepmine.speech.v1.StreamingRecognitionResult results = 2;</code>
   */
  ir.deepmine.speech.v1.StreamingRecognitionResult getResults(int index);
  /**
   * <pre>
   * Output only. This repeated list contains zero or more results that
   * correspond to consecutive portions of the audio currently being processed.
   * It contains zero or one `is_final=true` result (the newly settled portion),
   * followed by zero or more `is_final=false` results (the interim results).
   * </pre>
   *
   * <code>repeated .deepmine.speech.v1.StreamingRecognitionResult results = 2;</code>
   */
  int getResultsCount();
  /**
   * <pre>
   * Output only. This repeated list contains zero or more results that
   * correspond to consecutive portions of the audio currently being processed.
   * It contains zero or one `is_final=true` result (the newly settled portion),
   * followed by zero or more `is_final=false` results (the interim results).
   * </pre>
   *
   * <code>repeated .deepmine.speech.v1.StreamingRecognitionResult results = 2;</code>
   */
  java.util.List<? extends ir.deepmine.speech.v1.StreamingRecognitionResultOrBuilder> 
      getResultsOrBuilderList();
  /**
   * <pre>
   * Output only. This repeated list contains zero or more results that
   * correspond to consecutive portions of the audio currently being processed.
   * It contains zero or one `is_final=true` result (the newly settled portion),
   * followed by zero or more `is_final=false` results (the interim results).
   * </pre>
   *
   * <code>repeated .deepmine.speech.v1.StreamingRecognitionResult results = 2;</code>
   */
  ir.deepmine.speech.v1.StreamingRecognitionResultOrBuilder getResultsOrBuilder(
      int index);

  /**
   * <pre>
   * Output only. Indicates the type of speech event.
   * </pre>
   *
   * <code>.deepmine.speech.v1.StreamingRecognizeResponse.SpeechEventType speech_event_type = 3;</code>
   */
  int getSpeechEventTypeValue();
  /**
   * <pre>
   * Output only. Indicates the type of speech event.
   * </pre>
   *
   * <code>.deepmine.speech.v1.StreamingRecognizeResponse.SpeechEventType speech_event_type = 3;</code>
   */
  ir.deepmine.speech.v1.StreamingRecognizeResponse.SpeechEventType getSpeechEventType();
}
